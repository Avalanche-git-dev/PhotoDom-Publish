apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-ui-config
  labels:
    app: kafka-ui
  namespace: default
data:
  KAFKA_CLUSTERS_0_NAME: "local"
  KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
  KAFKA_CLUSTERS_0_SCHEMAREGISTRY: "http://schema-registry:8091"
  KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  labels:
    app: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      enableServiceLinks: false
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
        - containerPort: 8090
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          valueFrom:
            configMapKeyRef:
              name: kafka-ui-config
              key: KAFKA_CLUSTERS_0_NAME
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          valueFrom:
            configMapKeyRef:
              name: kafka-ui-config
              key: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
        - name: KAFKA_CLUSTERS_0_SCHEMAREGISTRY
          valueFrom:
            configMapKeyRef:
              name: kafka-ui-config
              key: KAFKA_CLUSTERS_0_SCHEMAREGISTRY
        - name: KAFKA_CLUSTERS_0_ZOOKEEPER
          valueFrom:
            configMapKeyRef:
              name: kafka-ui-config
              key: KAFKA_CLUSTERS_0_ZOOKEEPER
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "350m"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  labels:
    app: kafka-ui
spec:
  selector:
    app: kafka-ui
  ports:
  - name: http
    port: 8090
    targetPort: 8080
